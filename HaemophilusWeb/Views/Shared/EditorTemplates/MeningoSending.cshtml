@using HaemophilusWeb.Models
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.Models.Meningo.MeningoSending

@Html.ReadonlyFor(model => model.LaboratoryNumber)

<div class="form-group">
    @Html.LabelFor(model => model.SenderId, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.DropDownListFor(model => model.SenderId, ((IEnumerable<Sender>)ViewBag.PossibleSenders).Select(option => new SelectListItem
        {
            Text = (option == null ? "Kein Einsender" : string.Format("#{0} - {1} - {2}", option.SenderId, option.Name, option.PostalCode, option.City)),
            Value = option.SenderId.ToString(),
            Selected = (Model != null) && (option.SenderId == Model.SenderId)
        }), "Auswählen...", new { @class = "form-control" })

        @Html.ValidationMessageFor(model => model.SenderId)
    </div>
</div>
@if (@Request.Path.Contains("MeningoSending/"))
{
    <div class="form-group">
        @Html.LabelFor(model => model.MeningoPatientId, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            <div class="input-group">
                @Html.DropDownListFor(model => model.MeningoPatientId, ((IEnumerable<Patient>) ViewBag.PossiblePatients).Select(option => new SelectListItem
                {
                    Text = (option == null ? "None" : option.Initials),
                    Value = option.PatientId.ToString(),
                    Selected = (Model != null) && (option.PatientId == Model.MeningoPatientId)
                }), "Auswählen...", new {@class = "form-control"})

                <span class="input-group-addon"><span class="glyphicon glyphicon-star"></span></span>
            </div>
            @Html.ValidationMessageFor(model => model.MeningoPatientId)
        </div>
    </div>
}

@Html.DateEditorFor(m => m.ReceivingDate)

@Html.DateEditorFor(m => m.SamplingDate)

@Html.TextEditorFor(m => m.SenderLaboratoryNumber)

@Html.EnumRadioEditorFor(m=>m.SamplingLocation, "col-sm-10")

<div id="OtherSamplingLocationForm" class="form-group">
    @Html.LabelFor(m => m.OtherSamplingLocation, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.OtherSamplingLocation, new { @class = "form-control", @list = "otherSamplingLocationsAutocomplete", @autocomplete = "off" })
        <datalist id="otherSamplingLocationsAutocomplete">
            @foreach (var item in ViewBag.PossibleOtherSamplingLocations)
            {
                <option value="@item.ToString()" />
            }
        </datalist>

        @Html.ValidationMessageFor(model => model.OtherSamplingLocation)
    </div>
</div>

@Html.EnumRadioEditorFor(m => m.Material, "col-sm-10")

@Html.EnumRadioEditorFor(m => m.Invasive)

@Html.TextEditorFor(m => m.SenderConclusion)

<script>
    $(document).ready(function () {
        ShowOtherSamplingLocationIfOtherIsSelected();
        $('#Sending_SenderId').select2({ placeholder: "Wählen sie einen Einsender aus", maximumSelectionSize: 6 });
    });

    function ShowOtherSamplingLocationIfOtherIsSelected() {
        ShowDivIfInputHasSpecificSelectedValueOrClearInputOtherwise(
            "#OtherSamplingLocationForm", "input:radio[name$='SamplingLocation']",
            "input:radio[name$='SamplingLocation']:checked",
            "Other", "[id$='OtherSamplingLocation']"
        );
    }
</script>