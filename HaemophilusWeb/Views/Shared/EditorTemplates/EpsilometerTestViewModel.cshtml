@using HaemophilusWeb.Models
@using HaemophilusWeb.Utils
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.ViewModels.EpsilometerTestViewModel

@{ 
    var relevantBreakPoints = ((IEnumerable<EucastClinicalBreakpoint>) ViewBag.ClinicalBreakpoints).Where(
        b => b.Antibiotic == Model.Antibiotic).ToList();
}

<div class="form-group">
        @if (Model.ReadonlyAntibiotic)
        {
            <label title="@EnumEditor.GetEnumDescription(Model.Antibiotic)" class="col-sm-2 control-label nowrap-ellipsis">@EnumEditor.GetEnumDescription(Model.Antibiotic)</label>
            @Html.HiddenFor(model => model.Antibiotic);
        }
        else
        {
            <div class="col-sm-2 col-xs-12">
                @Html.DropDownListFor(model => model.Antibiotic, ((IEnumerable<Antibiotic>)ViewBag.Antibiotics).Select(
                option => new SelectListItem
                {
                    Text = EnumUtils.GetEnumDescription<Antibiotic>(option),
                    Value = ((int)option).ToString(),
                    Selected = (Model != null) && (option == Model.Antibiotic),
                }), "Antibiotikum auswählen...", new { @class = "form-control" })
            </div>
        }

    <div class="col-sm-2 col-xs-3">
        @Html.TextBoxFor(m => m.Measurement, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Measurement)
    </div>
    <div class="col-sm-4 col-xs-7">
        @Html.DropDownListFor(model => model.EucastClinicalBreakpointId, relevantBreakPoints.Select(
            option => new SelectListItem
            {
                Text = string.Format("{0} - v{1} vom {2:dd. MMM. yy}", option.AntibioticDetails, option.Version, option.ValidFrom),
                Value = option.EucastClinicalBreakpointId.ToString(),
                Selected = (Model != null) && (option.EucastClinicalBreakpointId == Model.EucastClinicalBreakpointId)
            }), "EUCAST Breakpoint auswählen...", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.EucastClinicalBreakpointId)
    </div>
    <div class="col-sm-4 col-xs-2 etest-labels">
        <span class="label label-etest-Susceptible" style="@(Model.Result==EpsilometerTestResult.Susceptible?"":"display:none")">
            @EnumEditor.GetEnumDescription(EpsilometerTestResult.Susceptible)
        </span>
        <span class="label label-etest-Intermediate" style="@(Model.Result == EpsilometerTestResult.Intermediate ? "" : "display:none")">
            @EnumEditor.GetEnumDescription(EpsilometerTestResult.Intermediate)
        </span>
        <span class="label label-etest-Resistant" style="@(Model.Result == EpsilometerTestResult.Resistant ? "" : "display:none")">
            @EnumEditor.GetEnumDescription(EpsilometerTestResult.Resistant)
        </span>
        @Html.HiddenFor(m => m.Result)
    </div>
</div>

