@using HaemophilusWeb.Models
@using HaemophilusWeb.Models.Meningo
@using HaemophilusWeb.Utils
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.Models.Meningo.MeningoPatient

@Html.Partial("_QueryPostalCodeViaGeonames")

@Html.TextEditorFor(m => m.Initials, "E.M.")

@Html.DateEditorFor(m => m.BirthDate)

@Html.EnumRadioEditorFor(m => m.Gender)

<div class="form-group">
    @Html.LabelFor(m => m.PostalCode, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.PostalCode, new { @placeholder = "97080", @class = "form-control", @list = "postalCodeSearchresults", @autocomplete = "off" })
        <datalist id="postalCodeSearchresults"></datalist>
        @Html.ValidationMessageFor(model => model.PostalCode)
    </div>
</div>

@Html.TextEditorFor(m => m.City, "Würzburg")
@Html.TextEditorFor(m => m.County, "Würzburg")

<div class="form-group">
    @Html.LabelFor(m => m.State, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @EnumEditor.EnumDropDownListFor(Html, model => model.State, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.State)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.ClinicalInformation, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-10">
        <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.NotAvailable) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="NotAvailable" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.NotAvailable) ? " checked" : string.Empty) /> k.A.
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Meningitis) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="Meningitis" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Meningitis) ? " checked" : string.Empty) /> Meningitis
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Sepsis) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="Sepsis" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Sepsis) ? " checked" : string.Empty) /> Sepsis
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.WaterhouseFriderichsenSyndrome) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="WaterhouseFriderichsenSyndrome" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.WaterhouseFriderichsenSyndrome) ? " checked" : string.Empty) /> WFS
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Lethal) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="Lethal" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Lethal) ? " checked" : string.Empty) /> Letal
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.NoSymptoms) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="NoSymptoms" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.NoSymptoms) ? " checked" : string.Empty) /> Keine Symptome
            </label>
            <label class="btn btn-default@(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Other) ? " active" : string.Empty)">
                <input type="checkbox" name="ClinicalInformation" value="Other" @(Model.ClinicalInformation.HasFlag(MeningoClinicalInformation.Other) ? " checked" : string.Empty) /> Andere
            </label>
        </div>
    </div>
</div>
<div id="OtherClinicalInformationForm" class="form-group">
    @Html.LabelFor(m => m.OtherClinicalInformation, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.OtherClinicalInformation, new { @class = "form-control", @list = "otherClinicalInformationAutocomplete", @autocomplete = "off" })
        <datalist id="otherClinicalInformationAutocomplete">
            @foreach (var item in ViewBag.PossibleOtherClinicalInformation)
            {
                <option value="@item.ToString()" />
            }
        </datalist>

        @Html.ValidationMessageFor(model => model.OtherClinicalInformation)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.RiskFactors, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-10">
        <div class="btn-group" data-toggle="buttons">
            <label class="btn btn-default@(Model.RiskFactors.HasFlag(RiskFactors.NotAvailable) ? " active" : string.Empty)">
                <input type="checkbox" name="RiskFactors" value="NotAvailable" @(Model.RiskFactors.HasFlag(RiskFactors.NotAvailable) ? " checked" : string.Empty) /> k.A.
            </label>
            <label class="btn btn-default@(Model.RiskFactors.HasFlag(RiskFactors.Asplenia) ? " active" : string.Empty)">
                <input type="checkbox" name="RiskFactors" value="Asplenia" @(Model.RiskFactors.HasFlag(RiskFactors.Asplenia) ? " checked" : string.Empty) /> Asplenie
            </label>
            <label class="btn btn-default@(Model.RiskFactors.HasFlag(RiskFactors.ComplementDefect) ? " active" : string.Empty)">
                <input type="checkbox" name="RiskFactors" value="ComplementDefect" @(Model.RiskFactors.HasFlag(RiskFactors.ComplementDefect) ? " checked" : string.Empty) /> Komplementdefekt
            </label>
            <label class="btn btn-default@(Model.RiskFactors.HasFlag(RiskFactors.EculizumabTherapy) ? " active" : string.Empty)">
                <input type="checkbox" name="RiskFactors" value="EculizumabTherapy" @(Model.RiskFactors.HasFlag(RiskFactors.EculizumabTherapy) ? " checked" : string.Empty) /> Eculizumab-Therapie
            </label>
            <label class="btn btn-default@(Model.RiskFactors.HasFlag(RiskFactors.Other) ? " active" : string.Empty)">
                <input type="checkbox" name="RiskFactors" value="Other" @(Model.RiskFactors.HasFlag(RiskFactors.Other) ? " checked" : string.Empty) /> Anderer
            </label>
        </div>
    </div>
</div>
<div id="OtherRiskFactorForm" class="form-group">
    @Html.LabelFor(m => m.OtherRiskFactor, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.OtherRiskFactor, new { @class = "form-control", @list = "otherRiskFactorAutocomplete", @autocomplete = "off" })
        <datalist id="otherRiskFactorAutocomplete">
            @foreach (var item in ViewBag.PossibleOtherRiskFactors)
            {
                <option value="@item.ToString()" />
            }
        </datalist>

        @Html.ValidationMessageFor(model => model.OtherRiskFactor)
    </div>
</div>

<script>
    $(document).ready(function () {
        ShowOtherClinicalInformationIfOtherIsSelected();
        ShowOtherRiskFactorIfOtherIsSelected();
    });

    function ShowOtherClinicalInformationIfOtherIsSelected() {
        ShowDivIfCheckBoxHasSpecificSelectedValueOrClearInputOtherwise(
            "#OtherClinicalInformationForm", "input:checkbox[name$='ClinicalInformation']",
            "input:checkbox[name$='ClinicalInformation']:checked",
            "Other", "[id$='OtherClinicalInformation']"
        );
    }

    function ShowOtherRiskFactorIfOtherIsSelected() {
        ShowDivIfCheckBoxHasSpecificSelectedValueOrClearInputOtherwise(
            "#OtherRiskFactorForm", "input:checkbox[name$='RiskFactors']",
            "input:checkbox[name$='RiskFactors']:checked",
            "Other", "[id$='OtherRiskFactor']"
        );
    }

</script>

