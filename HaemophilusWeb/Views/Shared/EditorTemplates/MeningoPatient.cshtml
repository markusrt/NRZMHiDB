@using DocumentFormat.OpenXml.Office2010.ExcelAc
@using HaemophilusWeb.Models
@using HaemophilusWeb.Models.Meningo
@using HaemophilusWeb.Utils
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.Models.Meningo.MeningoPatient

@Html.Partial("_QueryPostalCodeViaGeonames")

@Html.TextEditorFor(m => m.Initials, "E.M.")

@Html.DateEditorFor(m => m.BirthDate)

@Html.EnumRadioEditorFor(m => m.Gender)

<div class="form-group">
    @Html.LabelFor(m => m.PostalCode, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.PostalCode, new { @placeholder = "97080", @class = "form-control", @list = "postalCodeSearchresults", @autocomplete = "off" })
        <datalist id="postalCodeSearchresults"></datalist>
        @Html.ValidationMessageFor(model => model.PostalCode)
    </div>
</div>

@Html.TextEditorFor(m => m.City, "Würzburg")
@Html.TextEditorFor(m => m.County, "Würzburg")

<div class="form-group">
    @Html.LabelFor(m => m.State, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @EnumEditor.EnumDropDownListFor(Html, model => model.State, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.State)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(m => m.Country, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.DropDownListFor(m => m.Country,
            new SelectList(ViewBag.Countries, "IsoAlpha3", "CountryName"), new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Country)
    </div>
</div>

@Html.EnumRadioEditorFor(m => m.ClinicalInformation, "col-sm-10")
<div id="OtherClinicalInformationForm" class="form-group">
    @Html.LabelFor(m => m.OtherClinicalInformation, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.OtherClinicalInformation, new { @class = "form-control", @list = "otherClinicalInformationAutocomplete", @autocomplete = "off" })
        <datalist id="otherClinicalInformationAutocomplete">
            @foreach (var item in ViewBag.PossibleOtherClinicalInformation)
            {
                <option value="@item.ToString()" />
            }
        </datalist>

        @Html.ValidationMessageFor(model => model.OtherClinicalInformation)
    </div>
</div>

@Html.EnumRadioEditorFor(m => m.RiskFactors, "col-sm-10")
<div id="OtherRiskFactorForm" class="form-group">
    @Html.LabelFor(m => m.OtherRiskFactor, new { @class = "col-sm-2 control-label" })
    <div class="col-sm-5">
        @Html.TextBoxFor(m => m.OtherRiskFactor, new { @class = "form-control", @list = "otherRiskFactorAutocomplete", @autocomplete = "off" })
        <datalist id="otherRiskFactorAutocomplete">
            @foreach (var item in ViewBag.PossibleOtherRiskFactors)
            {
                <option value="@item.ToString()" />
            }
        </datalist>

        @Html.ValidationMessageFor(model => model.OtherRiskFactor)
    </div>
</div>

<script>
    $(document).ready(function () {
        ShowOtherClinicalInformationIfOtherIsSelected();
        ShowOtherRiskFactorIfOtherIsSelected();
    });

    function ShowOtherClinicalInformationIfOtherIsSelected() {
        ShowDivIfCheckBoxHasSpecificSelectedValueOrClearInputOtherwise(
            "#OtherClinicalInformationForm", "input:checkbox[name$='ClinicalInformation']",
            "input:checkbox[name$='ClinicalInformation']:checked",
            "Other", "[id$='OtherClinicalInformation']"
        );
    }

    function ShowOtherRiskFactorIfOtherIsSelected() {
        ShowDivIfCheckBoxHasSpecificSelectedValueOrClearInputOtherwise(
            "#OtherRiskFactorForm", "input:checkbox[name$='RiskFactors']",
            "input:checkbox[name$='RiskFactors']:checked",
            "Other", "[id$='OtherRiskFactor']"
        );
    }

</script>

