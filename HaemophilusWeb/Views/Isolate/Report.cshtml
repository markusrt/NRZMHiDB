@using HaemophilusWeb.Utils
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.ViewModels.IsolateViewModel

@{
    ViewBag.Title = "Befund erstellen";
}

@Scripts.Render("~/bundles/docxgen")

<h3>Befund (Auszug)</h3>
<dl class="dl-horizontal">
    <dt>@Html.DisplayNameFor(model => model.LaboratoryNumber)</dt>
    <dd>@Html.DisplayFor(model => model.LaboratoryNumber)</dd>
    <dt>@Html.DisplayNameFor(model => model.SamplingLocation)</dt>
    <dd>@Html.DisplayFor(model => model.SamplingLocation)</dd>
    <dt>@Html.DisplayNameFor(model => model.Patient)</dt>
    <dd>@Html.DisplayFor(model => model.Patient)</dd>
</dl>
<dl class="dl-horizontal">
    <dt>@Html.DisplayNameFor(model => model.Evaluation)</dt>
    <dd>@EnumEditor.GetEnumDescription(Model.Evaluation)</dd>
    <dt>@Html.DisplayNameFor(model => model.Agglutination)</dt>
    <dd>@EnumEditor.GetEnumDescription(Model.Agglutination)</dd>
    <dt>@Html.DisplayNameFor(model => model.SerotypePcr)</dt>
    <dd>@EnumEditor.GetEnumDescription(Model.SerotypePcr)</dd>
    <dt>@Html.DisplayNameFor(model => model.BexA)</dt>
    <dd>@EnumEditor.GetEnumDescription(Model.BexA)</dd>
</dl>
<hr />

@if (Model.Typings.Any())
{
    <h3>Antibiotika Tests</h3>
    <dl class="dl-horizontal">
        @foreach (var etest in Model.ETests)
        {
            <dt>@etest.Antibiotic</dt>
            <dd>@etest.Result</dd>
        }
    </dl>
}
<hr/>

<div class="form-horizontal">
    <div class="form-group">
        @Html.Label("Befundsvorlage", new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.DropDownList("ReportTemplate", ((IEnumerable<FileInfo>) ViewBag.ReportTemplates).Select(option => new SelectListItem
            {
                Text = (option == null ? "Keine Vorlagen hinterlegt" : option.Name),
                Value = Url.Content(option.FullName.ReverseMapPath())
            }), "Auswählen...", new {@class = "form-control"})
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Unterzeichner", new { @class = "col-sm-2 control-label" })
        <div class="col-sm-5">
            @Html.DropDownList("ReportSigner", ((IEnumerable<string>)ViewBag.ReportSigners).Select(option => new SelectListItem
            {
                Text = option,
                Value = option
            }), "Auswählen...", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button id="CreateReport" class="btn btn-primary">Befund erstellen</button>
        </div>
    </div>
</div>

@section Scripts{

    <script>
        var documentData = @(Html.Raw(Json.Encode(Model)));

        $("#CreateReport").click(function()
        {
            var templateFile = $("#ReportTemplate").val();
            if(templateFile == "")
            {
                return;
            }
            
            documentData["Signer"] = $("#ReportSigner").val();

            new DocxGen().loadFromFile(templateFile, { async: true, intelligentTagging: true }).success(function(doc)
            {
                doc.setTags(documentData);
                doc.applyTags();
                doc.output({ name: "@("KL " + Model.LaboratoryNumber.Replace("/","_") + "-" + DateTime.Now.ToString("yyyy-MM-dd") + ".docx")", type:"blob" });
            });
        });
    </script>
}
