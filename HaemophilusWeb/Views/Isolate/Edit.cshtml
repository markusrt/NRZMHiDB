@using HaemophilusWeb.Models
@using HaemophilusWeb.Views.Utils
@model HaemophilusWeb.ViewModels.IsolateViewModel

@{
    ViewBag.Title = "Isolat bearbeiten";
    ViewBag.Controller = "PatientSending";
}

@section EditModel
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.IsolateId, new {@class = "control-label col-sm-2"})
        <div class="col-sm-5 form-control-static">
            @Html.DisplayFor(model => model.IsolateId)
            @Html.HiddenFor(model => model.IsolateId)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LaboratoryNumber, new {@class = "control-label col-sm-2"})
        <div class="col-sm-5 form-control-static">
            @Html.DisplayFor(model => model.LaboratoryNumber)
            @Html.HiddenFor(model => model.LaboratoryNumber)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Material, new { @class = "control-label col-sm-2" })
        <div class="col-sm-5 form-control-static">
            @Html.DisplayFor(model => model.Material)
            @Html.HiddenFor(model => model.Material)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Invasive, new { @class = "control-label col-sm-2" })
        <div class="col-sm-5 form-control-static">
            @Html.DisplayFor(model => model.Invasive)
            @Html.HiddenFor(model => model.Invasive)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PatientAgeAtSampling, new { @class = "control-label col-sm-2" })
        <div class="col-sm-5 form-control-static">
            @Html.DisplayFor(model => model.PatientAgeAtSampling)
            @Html.HiddenFor(model => model.PatientAgeAtSampling)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FactorTest, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.EnumRadioButtonFor(model => model.FactorTest)
            @Html.ValidationMessageFor(model => model.FactorTest)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Agglutination, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-10">
            @Html.EnumRadioButtonFor(model => model.Agglutination)
            @Html.ValidationMessageFor(model => model.Agglutination)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Ampicillin, new { @class = "col-sm-2 col-xs-12 control-label" })
        @Html.EditorFor(model => model.Ampicillin, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BetaLactamase, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.BetaLactamase)
            @Html.ValidationMessageFor(model => model.BetaLactamase)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Oxidase, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.Oxidase)
            @Html.ValidationMessageFor(model => model.Oxidase)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AmoxicillinClavulanate, new { @class = "col-sm-2 col-xs-12 control-label" })
        @Html.EditorFor(model => model.AmoxicillinClavulanate, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Meropenem, new { @class = "col-sm-2 col-xs-12 control-label" })
        @Html.EditorFor(model => model.Meropenem, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Cefotaxime, new { @class = "col-sm-2 col-xs-12 control-label" })
        @Html.EditorFor(model => model.Cefotaxime, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OuterMembraneProteinP2, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.OuterMembraneProteinP2)
            @Html.ValidationMessageFor(model => model.OuterMembraneProteinP2)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FuculoKinase, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.FuculoKinase)
            @Html.ValidationMessageFor(model => model.FuculoKinase)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.OuterMembraneProteinP6, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.OuterMembraneProteinP6)
            @Html.ValidationMessageFor(model => model.OuterMembraneProteinP6)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BexA, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.BexA)
            @Html.ValidationMessageFor(model => model.BexA)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SerotypePcr, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.SerotypePcr)
            @Html.ValidationMessageFor(model => model.SerotypePcr)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RibosomalRna16S, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.RibosomalRna16S)
            @Html.ValidationMessageFor(model => model.RibosomalRna16S)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ApiNh, new {@class = "col-sm-2 control-label"})
        <div class="col-sm-5">
            @Html.EnumRadioButtonFor(model => model.ApiNh)
            @Html.ValidationMessageFor(model => model.ApiNh)
        </div>
    </div>
}

@section Scripts{
    <script>
        var clinicalBreakpoints = @(Html.Raw(Json.Encode(ViewBag.ClinicalBreakpoints)));
        
        $(document).ready(function() {
            $("select[id$=_EucastClinicalBreakpointId]").change(ETestChange);
            $("input[id$=_Measurement]").keyup(ETestChange);
        });

        function ETestChange() 
        {
            var id = $(this).attr('id');
            var antibiotic = id.substring(0, id.indexOf('_'));
            var currentBreakpointSelector = '#' + antibiotic + '_EucastClinicalBreakpointId';
            var currentMeasurementSelector = '#' + antibiotic + '_Measurement';

            SetETestResult(antibiotic, null);

            var currentBreakpointId = $(currentBreakpointSelector).val();
            
            var currentMeasurement = parseFloat($(currentMeasurementSelector).val());
            if (isNaN(currentMeasurement)) 
            {
                return;
            }

            clinicalBreakpoints.forEach(function(clinicalBreakpoint) 
            {
                if(currentBreakpointId==clinicalBreakpoint.EucastClinicalBreakpointId) 
                {
                    if(currentMeasurement>clinicalBreakpoint.MicBreakpointResistent) 
                    {
                        SetETestResult(antibiotic, 'Resistant');
                    }
                    else if(currentMeasurement<=clinicalBreakpoint.MicBreakpointSusceptible) 
                    {
                        SetETestResult(antibiotic, 'Susceptible');
                    }
                    else if(currentMeasurement != null)
                    {
                        SetETestResult(antibiotic, 'Intermediate');
                    }
                }
            });
        }

        function SetETestResult(antibiotic, result)
        {
            var resultSelector = '#' + antibiotic + '_Result';

            $(resultSelector).val('');
            hideAll('span[id^=' + antibiotic + '_ETest]');

            if(result != null)
            {
                showAll('#' + antibiotic + '_ETest' + result);
                $(resultSelector).val(result);
            }
        }

    </script>
} 